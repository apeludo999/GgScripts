--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26=0 + 0 ;local v27;while true do if (v26==0) then v27={};for v101=581 -(361 + 219) , #v24 do v6(v27,v0(v4(v1(v2(v24,v101,v101 + (321 -(53 + 267)) )),v1(v2(v25,1 + (v101% #v25) ,1 + (v101% #v25) + 1 )))%(58 + 198) ));end v26=1;end if (v26==1) then return v5(v27);end end end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v28,v29,...) local v30=414 -(15 + 398) ;local v31;v28=v12(v11(v28,987 -(18 + 964) ),v7("\149\174","\161\187\128\132\17\28\41\187"),function(v42) if (v9(v42,2)==(304 -223)) then v31=v8(v11(v42,1,1 + 0 ));return "";else local v96=v10(v8(v42,49 -(21 + 12) ));if v31 then local v105=v13(v96,v31);v31=nil;return v105;else return v96;end end end);local function v32(v43,v44,v45) if v45 then local v97=(v43/(2^(v44-((852 -(20 + 830)) -(1 + 0)))))%(2^(((v45-(127 -(116 + 10))) -(v44-1)) + 1 + 0)) ;return v97-(v97%(739 -(542 + 196))) ;else local v98=2^(v44-(1 -0)) ;return (((v43%(v98 + v98))>=v98) and ((1 + 0) -(0 + 0))) or ((0 + 0) -0) ;end end local function v33() local v46=0;local v47;local v48;while true do if (v46==(0 -0)) then v47=0 -0 ;v48=nil;v46=1;end if (v46==(1552 -(1126 + 425))) then while true do local v106=0;local v107;while true do if (v106==(405 -(118 + 287))) then v107=0 -0 ;while true do if (v107==(1121 -(118 + 1003))) then if (v47==(2 -1)) then return v48;end if (v47==0) then local v135=0;while true do if (v135==(378 -(142 + 235))) then v47=4 -3 ;break;end if (v135==(0 + 0)) then v48=v9(v28,v30,v30);v30=v30 + (978 -(553 + 424)) ;v135=1 -0 ;end end end break;end end break;end end end break;end end end local function v34() local v49=0 + 0 ;local v50;local v51;while true do if (v49==(1 + 0)) then return (v51 * (150 + 106)) + v50 ;end if (v49==0) then local v102=0;while true do if (v102==(1 + 0)) then v49=1 + 0 ;break;end if (v102==(0 -0)) then v50,v51=v9(v28,v30,v30 + (5 -3) );v30=v30 + (4 -2) ;v102=1 + 0 ;end end end end end local function v35() local v52,v53,v54,v55=v9(v28,v30,v30 + (14 -11) );v30=v30 + (757 -(239 + 514)) ;return (v55 * (5892331 + 10884885)) + (v54 * ((67484 -(797 + 532)) -(404 + 151 + 64))) + (v53 * 256) + v52 ;end local function v36() local v56=0 + 0 ;local v57;local v58;local v59;local v60;local v61;local v62;while true do local v81=0;while true do if (v81==(2 -1)) then if (v56==1) then local v119=1202 -(373 + 829) ;while true do if (v119==(731 -(476 + 255))) then v59=1;v60=(v32(v58,1,20) * ((1132 -(369 + 761))^32)) + v57 ;v119=1 + 0 ;end if ((1 -0)==v119) then v56=2;break;end end end if (v56==2) then v61=v32(v58,39 -18 ,962 -(857 + (312 -(64 + 174))) );v62=((v32(v58,32)==(1 + 0)) and  -(1 -0)) or (569 -(367 + (537 -(144 + 192)))) ;v56=219 -(42 + 174) ;end break;end if ((0 + 0)==v81) then if (v56==(0 + 0)) then v57=v35();v58=v35();v56=1;end if (3==v56) then if (v61==((394 + 533) -(214 + 713))) then if (v60==0) then return v62 * 0 ;else local v130=1504 -(363 + 1141) ;while true do if (v130==0) then v61=1 + (1580 -(1183 + 397)) ;v59=0 -0 ;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * (1/(0 + 0)))) or (v62 * NaN) ;end return v16(v62,v61-(765 + 258) ) * (v59 + (v60/((1977 -(1913 + 62))^(33 + 19)))) ;end v81=2 -1 ;end end end end local function v37(v63) local v64=0;local v65;local v66;local v67;while true do if (v64==(1933 -(565 + 1368))) then v65=0 -0 ;v66=nil;v64=1662 -(1477 + 184) ;end if ((1 -0)==v64) then v67=nil;while true do local v108=0;while true do if ((1 + 0)==v108) then if ((859 -(564 + 292))==v65) then return v14(v67);end if (v65==(1 -0)) then v66=v11(v28,v30,(v30 + v63) -(2 -1) );v30=v30 + v63 ;v65=2;end break;end if (v108==(304 -(244 + 60))) then if (v65==(2 + 0)) then v67={};for v131=477 -(41 + 435) , #v66 do v67[v131]=v10(v9(v11(v66,v131,v131)));end v65=3;end if (v65==0) then v66=nil;if  not v63 then local v134=0;while true do if (v134==(1001 -(938 + 63))) then v63=v35();if (v63==0) then return "";end break;end end end v65=1 + 0 ;end v108=1126 -(936 + 189) ;end end end break;end end end local v38=v35;local function v39(...) return {...},v20("#",...);end local function v40() local v68=0;local v69;local v70;local v71;local v72;local v73;local v74;while true do if (v68==(1614 -(1565 + 48))) then local v103=0;while true do if (0==v103) then v73=v35();v74={};v103=1;end if (v103==2) then v68=2 + 0 ;break;end if (v103==(1139 -(782 + 356))) then for v126=268 -(176 + 91) ,v73 do local v127=0 -0 ;local v128;local v129;while true do if (v127==0) then v128=v33();v129=nil;v127=1 -0 ;end if (v127==(1093 -(975 + 117))) then if (v128==1) then v129=v33()~=(1875 -(157 + 1718)) ;elseif (v128==((1331 + 308) -((5406 -3883) + (389 -275)))) then v129=v36();elseif (v128==3) then v129=v37();end v74[v126]=v129;break;end end end v72[(1021 -(697 + 321)) + (0 -0) ]=v33();v103=2;end end end if (v68==2) then for v109=1 -0 ,v35() do local v110=v33();if (v32(v110,2 -1 ,1 + 0 )==(0 -0)) then local v121=0;local v122;local v123;local v124;local v125;while true do if (v121==(2 -1)) then v124=nil;v125=nil;v121=2;end if (v121==0) then v122=0;v123=nil;v121=1228 -(322 + 905) ;end if (v121==(613 -(602 + 9))) then while true do if (v122==3) then if (v32(v124,1192 -(449 + 740) ,875 -(826 + 46) )==(948 -(245 + 702))) then v125[4]=v74[v125[4]];end v69[v109]=v125;break;end if ((6 -4)==v122) then local v137=0 + 0 ;while true do if (v137==(1899 -(260 + 1638))) then v122=443 -(382 + 58) ;break;end if (v137==0) then if (v32(v124,3 -2 ,1)==(1 + 0)) then v125[3 -1 ]=v74[v125[2]];end if (v32(v124,5 -3 ,(1324 -(902 + 303)) -((69 -37) + (204 -119)) )==(1 + 0)) then v125[1 + 2 ]=v74[v125[1693 -(1121 + 569) ]];end v137=1;end end end if (v122==1) then v125={v34(),v34(),nil,nil};if (v123==0) then local v140=0;while true do if (v140==(0 -0)) then v125[3 -0 ]=v34();v125[769 -(468 + 297) ]=v34();break;end end elseif (v123==(563 -(334 + 228))) then v125[10 -7 ]=v35();elseif (v123==((2472 -1405) -(68 + (1807 -810)))) then v125[(362 + 911) -((462 -(141 + 95)) + 1044) ]=v35() -((2 + 0)^(41 -25)) ;elseif (v123==(6 -3)) then local v348=0 + 0 ;local v349;while true do if (v348==(0 -0)) then v349=0 + 0 ;while true do if ((0 + 0)==v349) then v125[(16 -4) -(6 + 3) ]=v35() -((165 -(92 + 71))^(8 + 8)) ;v125[6 -2 ]=v34();break;end end break;end end end v122=767 -(574 + 191) ;end if (v122==0) then v123=v32(v110,2 + 0 ,7 -4 );v124=v32(v110,3 + 1 ,6);v122=1;end end break;end end end end for v111=850 -(254 + 595) ,v35() do v70[v111-1 ]=v40();end return v72;end if (0==v68) then local v104=126 -(55 + 71) ;while true do if (v104==(2 -0)) then v68=1791 -(573 + 1217) ;break;end if (v104==(2 -1)) then v71={};v72={v69,v70,nil,v71};v104=2;end if (v104==(0 -0)) then v69={};v70={};v104=1;end end end end end local function v41(v75,v76,v77) local v78=v75[1];local v79=v75[2];local v80=v75[1 + 2 ];return function(...) local v82=v78;local v83=v79;local v84=v80;local v85=v39;local v86=1;local v87= -(1 -0);local v88={};local v89={...};local v90=v20("#",...) -(807 -(118 + 688)) ;local v91={};local v92={};for v99=48 -(25 + 23) ,v90 do if (v99>=v84) then v88[v99-v84 ]=v89[v99 + 1 ];else v92[v99]=v89[v99 + 1 ];end end local v93=(v90-v84) + 1 + 0 + (1886 -(927 + 959)) ;local v94;local v95;while true do local v100=0 -0 ;while true do if (v100==(732 -(16 + 716))) then v94=v82[v86];v95=v94[1 -0 ];v100=98 -(11 + 86) ;end if (v100==(2 -1)) then if (v95<=(331 -(175 + 110))) then if (v95<=(55 -33)) then if (v95<=(49 -39)) then if (v95<=(1800 -(503 + 1293))) then if (v95<=1) then if (v95>(0 -0)) then local v148=0 + 0 ;local v149;local v150;while true do if (v148==(1062 -(810 + 251))) then while true do if (v149==(0 + 0)) then v150=v94[1 + 1 ];v92[v150]=v92[v150](v92[v150 + ((864 + 94) -((1425 -(43 + 490)) + (798 -(711 + 22)))) ]);break;end end break;end if (v148==(0 -0)) then v149=0;v150=nil;v148=1;end end else v92[v94[861 -(240 + 619) ]][v92[v94[1 + 2 ]]]=v94[5 -1 ];end elseif (v95<=(1 + 1)) then v92[v94[4 -2 ]]();elseif (v95>(1747 -(1344 + 400))) then for v350=v94[407 -(255 + 150) ],v94[(4 + 1) -(2 + 0) ] do v92[v350]=nil;end else local v217=0 -0 ;local v218;while true do if (v217==(0 -0)) then v218=v94[1741 -(404 + 1335) ];v92[v218](v21(v92,v218 + 1 ,v94[409 -(183 + 223) ]));break;end end end elseif (v95<=(8 -1)) then if (v95<=5) then v92[v94[2]]=v94[2 + 1 ]~=(0 + 0) ;elseif (v95==(343 -(10 + 327))) then local v219=v94[2 + 0 ];v92[v219](v21(v92,v219 + (339 -(118 + 220)) ,v94[1 + 2 ]));else local v220=449 -(108 + 341) ;local v221;local v222;local v223;while true do if ((1 + 0)==v220) then v223=0;for v423=v221,v94[16 -12 ] do local v424=1493 -(711 + 782) ;local v425;while true do if (v424==(0 -0)) then v425=0;while true do if (v425==0) then v223=v223 + (470 -(270 + 199)) ;v92[v423]=v222[v223];break;end end break;end end end break;end if ((0 + 0)==v220) then v221=v94[2];v222={v92[v221](v92[v221 + (1820 -(580 + 1239)) ])};v220=2 -1 ;end end end elseif (v95<=(8 + 0)) then v92[v94[1 + 1 ]]=v92[v94[353 -(38 + 49 + (686 -423)) ]]%v92[v94[4]] ;elseif (v95==(6 + 3)) then v92[v94[1169 -(645 + 522) ]]=v94[1793 -(1010 + 780) ] + v92[v94[4]] ;else local v225=0 + 0 ;local v226;while true do if (v225==0) then v226=v94[9 -7 ];v92[v226]=v92[v226](v21(v92,v226 + 1 ,v87));break;end end end elseif (v95<=16) then if (v95<=13) then if (v95<=(32 -21)) then local v155=0;local v156;while true do if (v155==0) then v156=v94[1838 -(1045 + 791) ];v92[v156]=v92[v156]();break;end end elseif (v95==(30 -18)) then local v227=v94[2];local v228,v229=v85(v92[v227](v21(v92,v227 + ((275 -94) -((572 -(351 + 154)) + 113)) ,v94[(1577 -(1281 + 293)) + 0 ])));v87=(v229 + v227) -(267 -(28 + 238)) ;local v230=0;for v354=v227,v87 do local v355=0;local v356;while true do if (v355==(0 -0)) then v356=1559 -(1381 + 178) ;while true do if (v356==(0 + 0)) then v230=v230 + 1 ;v92[v354]=v228[v230];break;end end break;end end end else v92[v94[2]]=v92[v94[3 + 0 ]];end elseif (v95<=(6 + 8)) then if (v92[v94[2]]==v94[4]) then v86=v86 + (3 -2) ;else v86=v94[3];end elseif (v95==15) then v92[v94[2]]= #v92[v94[2 + 1 ]];else v92[v94[472 -(381 + 89) ]][v92[v94[3 + 0 ]]]=v92[v94[3 + 1 ]];end elseif (v95<=19) then if (v95<=(28 -11)) then local v157=1156 -(1074 + 82) ;local v158;local v159;local v160;local v161;while true do if (v157==(0 -0)) then v158=v94[(1788 -(214 + 1570)) -2 ];v159,v160=v85(v92[v158](v92[v158 + (1456 -(990 + 465)) ]));v157=1 + 0 ;end if (v157==1) then v87=(v160 + v158) -(1 + 0) ;v161=0 + 0 ;v157=7 -5 ;end if (v157==(1728 -(1668 + 58))) then for v378=v158,v87 do local v379=626 -(512 + 114) ;local v380;while true do if (v379==(0 -0)) then v380=0 -0 ;while true do if (v380==(0 -0)) then v161=v161 + 1 + 0 ;v92[v378]=v159[v161];break;end end break;end end end break;end end elseif (v95==18) then local v237=v94[2];do return v92[v237](v21(v92,v237 + 1 + 0 ,v94[3]));end else do return v92[v94[2 + 0 ]]();end end elseif (v95<=(67 -47)) then local v162=1994 -(109 + 1885) ;local v163;local v164;while true do if (v162==(1470 -(1269 + 200))) then while true do if (v163==(0 -0)) then v164=v94[(817 -(98 + 717)) + (826 -(802 + 24)) ];do return v21(v92,v164,v87);end break;end end break;end if ((0 -0)==v162) then local v358=0;while true do if ((0 -0)==v358) then v163=0 + 0 ;v164=nil;v358=1 + 0 ;end if (v358==(1 + 0)) then v162=1;break;end end end end elseif (v95==(5 + 16)) then v92[v94[5 -3 ]]=v77[v94[9 -6 ]];elseif v92[v94[1 + 1 ]] then v86=v86 + 1 + 0 ;else v86=v94[3 + 0 ];end elseif (v95<=(25 + 9)) then if (v95<=28) then if (v95<=(12 + 13)) then if (v95<=(1456 -(797 + 636))) then local v165=0;local v166;local v167;local v168;while true do if (v165==(0 -0)) then v166=v94[1621 -(1427 + 192) ];v167=v92[v166];v165=1 + 0 ;end if (v165==1) then v168=v92[v166 + (4 -2) ];if (v168>(0 -(0 + 0))) then if (v167>v92[v166 + 1 + 0 ]) then v86=v94[329 -(192 + 134) ];else v92[v166 + (955 -(802 + (1426 -(316 + 960)))) ]=v167;end elseif (v167<v92[v166 + 1 ]) then v86=v94[3];else v92[v166 + 2 + 1 ]=v167;end break;end end elseif (v95>(19 + 5)) then v92[v94[2 + 0 ]]=v76[v94[3]];else v76[v94[11 -8 ]]=v92[v94[553 -(83 + 468) ]];end elseif (v95<=(1832 -(1202 + 604))) then v92[v94[9 -7 ]][v94[3]]=v92[v94[(16 -6) -(16 -10) ]];elseif (v95==27) then local v244=v94[327 -(45 + 280) ];local v245=v94[4 + 0 ];local v246=v244 + 2 + 0 ;local v247={v92[v244](v92[v244 + ((1 + 0) -0) ],v92[v246])};for v362=1 + 0 ,v245 do v92[v246 + v362 ]=v247[v362];end local v248=v247[1];if v248 then local v382=0 + 0 ;local v383;while true do if (v382==(0 -0)) then v383=1911 -(340 + 1571) ;while true do if (v383==0) then v92[v246]=v248;v86=v94[3];break;end end break;end end else v86=v86 + 1 + 0 ;end else v92[v94[1774 -(1733 + 39) ]]=v94[3];end elseif (v95<=((63 -40) + (1042 -(125 + 909)))) then if (v95<=(1977 -(1096 + 852))) then v92[v94[1 + 1 ]]=v92[v94[3 -0 ]][v94[4 + 0 ]];elseif (v95>((1539 -(409 + 103)) -((1151 -(46 + 190)) + (177 -(51 + 44))))) then v92[v94[(2 + 3) -(1320 -(1114 + 203)) ]]=v92[v94[3]]%v94[4] ;else v92[v94[728 -(228 + 498) ]]=v76[v94[3]];end elseif (v95<=(7 + 25)) then v92[v94[2]]=v92[v94[2 + 1 ]][v94[667 -(174 + 489) ]];elseif (v95==(85 -52)) then local v254=1905 -(830 + 1075) ;local v255;local v256;while true do if (v254==(524 -(303 + 221))) then v255=1269 -(231 + 1038) ;v256=nil;v254=1 + 0 ;end if (v254==1) then while true do if (0==v255) then v256=v94[1164 -(171 + 991) ];v92[v256](v21(v92,v256 + (4 -3) ,v87));break;end end break;end end else local v257=0 -0 ;local v258;while true do if ((0 -0)==v257) then v258=v94[2 + 0 ];do return v21(v92,v258,v87);end break;end end end elseif (v95<=40) then if (v95<=(129 -92)) then if (v95<=(100 -65)) then v92[v94[2 -0 ]]=v92[v94[3]]%v92[v94[12 -8 ]] ;elseif (v95>(1284 -(111 + 1137))) then v76[v94[161 -(91 + 67) ]]=v92[v94[2]];else local v261=0;local v262;local v263;local v264;local v265;while true do if (v261==1) then v87=(v264 + v262) -(2 -1) ;v265=0;v261=1 + 1 ;end if (v261==2) then for v427=v262,v87 do local v428=0;while true do if (v428==(523 -(423 + 100))) then v265=v265 + 1 ;v92[v427]=v263[v265];break;end end end break;end if (0==v261) then v262=v94[2];v263,v264=v85(v92[v262](v92[v262 + 1 + 0 ]));v261=1;end end end elseif (v95<=(104 -66)) then v92[v94[2 + 0 ]]=v92[v94[3]]%v94[775 -(326 + 445) ] ;elseif (v95>(170 -131)) then local v266=v94[4 -2 ];local v267={};for v365=2 -1 , #v91 do local v366=711 -(530 + 181) ;local v367;while true do if (v366==0) then v367=v91[v365];for v475=881 -(614 + 267) , #v367 do local v476=32 -(19 + 13) ;local v477;local v478;local v479;local v480;local v481;while true do if (v476==(1 -0)) then v479=nil;v480=nil;v476=2;end if (v476==(0 -0)) then v477=0 -0 ;v478=nil;v476=1 + 0 ;end if (v476==2) then v481=nil;while true do if (v477==1) then v480=nil;v481=nil;v477=3 -1 ;end if (v477==2) then while true do if (v478==0) then local v564=0 -0 ;while true do if (v564==(1812 -(1293 + 519))) then v479=v367[v475];v480=v479[(1 -0) + (0 -0) ];v564=1 -0 ;end if (v564==(4 -3)) then v478=2 -1 ;break;end end end if (v478==(1 + 0)) then v481=v479[1 + 1 ];if ((v480==v92) and (v481>=v266)) then local v572=0;local v573;while true do if (v572==(0 -0)) then v573=0 + 0 ;while true do if (v573==0) then v267[v481]=v480[v481];v479[1]=v267;break;end end break;end end end break;end end break;end if (v477==(0 + 0)) then v478=0 + 0 ;v479=nil;v477=1;end end break;end end end break;end end end else local v268=1096 -(709 + 387) ;local v269;local v270;while true do if (v268==(1858 -(673 + 1185))) then v269=0 -0 ;v270=nil;v268=3 -2 ;end if (v268==(1 -0)) then while true do if (v269==0) then v270=v94[2 + 0 ];v92[v270]=v92[v270](v21(v92,v270 + ((1 + 0) -(0 -0)) ,v94[1 + 2 ]));break;end end break;end end end elseif (v95<=(85 -42)) then if (v95<=(80 -39)) then local v177=0;local v178;local v179;local v180;local v181;local v182;while true do if (v177==(1881 -(446 + 1434))) then v180=v178 + 2 ;v181={v92[v178](v92[v178 + (2 -1) ],v92[v180])};v177=1849 -(559 + 1288) ;end if (v177==(1934 -(609 + 1322))) then if v182 then local v403=454 -(13 + 441) ;local v404;while true do if (v403==0) then v404=0 -0 ;while true do if (v404==(0 -0)) then v92[v180]=v182;v86=v94[3];break;end end break;end end else v86=v86 + 1 ;end break;end if (v177==(0 -0)) then local v368=0 + 0 ;while true do if (v368==(0 -0)) then v178=v94[2];v179=v94[4];v368=1;end if (v368==1) then v177=1 + 0 ;break;end end end if (v177==(1 + 1)) then for v384=2 -1 ,v179 do v92[v180 + v384 ]=v181[v384];end v182=v181[1 + 0 ];v177=3;end end elseif (v95==(76 -34)) then local v271=0 + 0 ;local v272;local v273;local v274;local v275;while true do if ((1 + 0)==v271) then v87=(v274 + v272) -(1 + 0) ;v275=(997 + 190) -(1046 + 23 + (551 -(153 + 280))) ;v271=2;end if ((0 -0)==v271) then v272=v94[2 + 0 ];v273,v274=v85(v92[v272](v21(v92,v272 + 1 + 0 ,v87)));v271=1;end if (v271==(2 + 0)) then for v432=v272,v87 do local v433=0;local v434;while true do if (v433==0) then v434=0 + 0 ;while true do if ((0 + 0)==v434) then v275=v275 + (1 -0) ;v92[v432]=v273[v275];break;end end break;end end end break;end end else for v370=v94[2 + 0 ],v94[670 -(89 + 578) ] do v92[v370]=nil;end end elseif (v95<=(32 + 12)) then local v183=v94[3 -1 ];v92[v183]=v92[v183](v92[v183 + (1050 -(572 + 477)) ]);elseif (v95>45) then v92[v94[1 + 1 ]][v92[v94[6 -(2 + 1) ]]]=v92[v94[4]];else local v278=0 + 0 ;local v279;local v280;local v281;while true do if (v278==(87 -(84 + 2))) then v281=0 -0 ;for v435=v279,v94[3 + 1 ] do v281=v281 + (843 -(497 + 345)) ;v92[v435]=v280[v281];end break;end if (v278==0) then v279=v94[2];v280={v92[v279](v92[v279 + 1 + 0 ])};v278=1 + 0 ;end end end elseif (v95<=(1402 -(605 + 728))) then if (v95<=(41 + 16)) then if (v95<=51) then if (v95<=(106 -58)) then if (v95>(3 + 44)) then if (v92[v94[7 -5 ]]==v94[4 + 0 ]) then v86=v86 + (2 -1) ;else v86=v94[3 + 0 ];end else v86=v94[3];end elseif (v95<=49) then if (v94[2]==v92[v94[4]]) then v86=v86 + (490 -(457 + 32)) ;else v86=v94[3];end elseif (v95>50) then local v284=v94[2];local v285={v92[v284](v21(v92,v284 + (1403 -(832 + 570)) ,v87))};local v286=0 + 0 ;for v372=v284,v94[4] do local v373=0 + 0 ;while true do if (0==v373) then v286=v286 + 1 ;v92[v372]=v285[v286];break;end end end else local v287=0 -0 ;local v288;local v289;local v290;local v291;local v292;while true do if (v287==(1 + 1)) then v292=nil;while true do if (v288==(797 -(588 + 208))) then v87=(v291 + v289) -(2 -1) ;v292=(1800 -(884 + 916)) + (0 -0) ;v288=2;end if (v288==(0 + 0)) then v289=v94[655 -(232 + 421) ];v290,v291=v85(v92[v289](v21(v92,v289 + (1890 -(1569 + 320)) ,v94[1 + 2 ])));v288=1;end if (v288==(1 + 1)) then for v504=v289,v87 do v292=v292 + 1 ;v92[v504]=v290[v292];end break;end end break;end if (v287==1) then v290=nil;v291=nil;v287=2;end if (v287==(0 -0)) then v288=605 -(316 + 289) ;v289=nil;v287=2 -1 ;end end end elseif (v95<=(3 + 51)) then if (v95<=52) then local v186=1453 -(666 + 787) ;local v187;local v188;while true do if (v186==(426 -(360 + 65))) then for v387=1 + 0 , #v91 do local v388=0;local v389;local v390;while true do if (v388==0) then local v482=0;while true do if ((255 -(79 + 175))==v482) then v388=1 -0 ;break;end if (v482==(0 + 0)) then v389=0 -0 ;v390=nil;v482=1;end end end if (v388==(1 -0)) then while true do if (v389==(899 -(503 + 396))) then v390=v91[v387];for v525=(181 -(92 + 89)) -0 , #v390 do local v526=0 -0 ;local v527;local v528;local v529;local v530;while true do if (v526==(0 + 0)) then v527=0 + 0 ;v528=nil;v526=3 -2 ;end if (v526==(1 + 1)) then while true do if (v527==(2 -1)) then v530=v528[2 + 0 + 0 ];if ((v529==v92) and (v530>=v187)) then local v577=0 + 0 ;while true do if (v577==0) then v188[v530]=v529[v530];v528[2 -1 ]=v188;break;end end end break;end if (v527==0) then local v568=0;local v569;while true do if (0==v568) then v569=0 + 0 ;while true do if (v569==1) then v527=1 -0 ;break;end if ((1244 -(485 + 759))==v569) then v528=v390[v525];v529=v528[2 -1 ];v569=1;end end break;end end end end break;end if (v526==1) then local v554=1189 -(442 + 747) ;while true do if ((1135 -(832 + 303))==v554) then v529=nil;v530=nil;v554=947 -(88 + 858) ;end if (v554==(1 + 0)) then v526=2 + 0 ;break;end end end end end break;end end break;end end end break;end if (v186==(0 + 0)) then v187=v94[2];v188={};v186=790 -(766 + 23) ;end end elseif (v95==53) then local v293=v94[9 -7 ];local v294=v92[v293];local v295=v92[v293 + 2 ];if (v295>(0 -0)) then if (v294>v92[v293 + (2 -1) ]) then v86=v94[10 -7 ];else v92[v293 + (1076 -(1036 + 37)) ]=v294;end elseif (v294<v92[v293 + ((562 + 230) -(368 + (823 -400))) ]) then v86=v94[3 + 0 ];else v92[v293 + 3 ]=v294;end else v92[v94[1482 -(641 + 839) ]]=v94[916 -(910 + 3) ] + v92[v94[4]] ;end elseif (v95<=55) then v92[v94[4 -2 ]]=v94[1687 -(1466 + 218) ];elseif (v95>56) then v92[v94[2]]={};else v92[v94[2]]=v92[v94[3]] + v94[2 + 2 ] ;end elseif (v95<=(197 -134)) then if (v95<=(1208 -(556 + 592))) then if (v95<=(21 + 37)) then do return v92[v94[810 -(329 + 479) ]]();end elseif (v95>(913 -(174 + 680))) then if  not v92[v94[2]] then v86=v86 + (3 -2) ;else v86=v94[5 -2 ];end else local v299=0 + 0 ;local v300;local v301;while true do if (v299==(739 -(396 + 343))) then v300=v94[1 + 1 ];v301=v92[v94[1480 -(29 + 1448) ]];v299=1390 -(135 + 1254) ;end if (v299==(3 -2)) then v92[v300 + (4 -3) ]=v301;v92[v300]=v301[v94[3 + 1 ]];break;end end end elseif (v95<=((1606 -(389 + 1138)) -((584 -(102 + 472)) + 8 + 0))) then local v191=0 + 0 ;local v192;local v193;local v194;local v195;while true do if (v191==(2 + 0)) then while true do if (v192==1) then local v444=1545 -(320 + 1225) ;local v445;while true do if (v444==(0 -0)) then v445=0 + 0 ;while true do if (v445==0) then v195={};v194=v18({},{[v7("\98\62\59\11\89\4\42","\101\61\97\82")]=function(v544,v545) local v546=v195[v545];return v546[1465 -(157 + 1307) ][v546[1861 -(821 + 1038) ]];end,[v7("\129\54\162\43\45\183\7\168\43\34","\90\222\105\204\78")]=function(v547,v548,v549) local v550=0 -0 ;local v551;local v552;local v553;while true do if (1==v550) then v553=nil;while true do if (v551==(0 + 0)) then v552=0 -0 ;v553=nil;v551=1 + 0 ;end if ((2 -1)==v551) then while true do if (v552==(1026 -(834 + 192))) then v553=v195[v548];v553[1][v553[2]]=v549;break;end end break;end end break;end if (v550==(0 + 0)) then v551=0;v552=nil;v550=1 + 0 ;end end end});v445=1 + 0 ;end if (v445==(1 -0)) then v192=306 -(300 + 4) ;break;end end break;end end end if (v192==(1 + 1)) then for v483=2 -1 ,v94[366 -(112 + 250) ] do local v484=0 + 0 ;local v485;while true do if (v484==(2 -1)) then if (v485[1]==13) then v195[v483-(1 + 0) ]={v92,v485[2 + 1 ]};else v195[v483-(1 + 0) ]={v76,v485[3]};end v91[ #v91 + (883 -(244 + 638)) ]=v195;break;end if (v484==(693 -(627 + 66))) then local v521=0 -0 ;local v522;while true do if (v521==0) then v522=0;while true do if (v522==(602 -(512 + 90))) then v86=v86 + (1907 -(1665 + 241)) ;v485=v82[v86];v522=1;end if (1==v522) then v484=718 -(373 + 344) ;break;end end break;end end end end end v92[v94[1 + 1 ]]=v41(v193,v194,v77);break;end if (v192==(0 + 0)) then local v447=0 -0 ;while true do if (v447==(0 -0)) then v193=v83[v94[3]];v194=nil;v447=1100 -(35 + 1064) ;end if ((1 + 0)==v447) then v192=2 -1 ;break;end end end end break;end if ((1 + 0)==v191) then v194=nil;v195=nil;v191=2;end if (v191==(1236 -(298 + 938))) then v192=1259 -(233 + 1026) ;v193=nil;v191=1667 -(636 + 1030) ;end end elseif (v95>62) then local v302=v94[2 + 0 ];local v303=v92[v94[(11 + 0) -(3 + 5) ]];v92[v302 + 1 ]=v303;v92[v302]=v303[v94[1 + 3 ]];elseif v92[v94[2]] then v86=v86 + (222 -(55 + 166)) ;else v86=v94[3];end elseif (v95<=((99 + 409) -(416 + 26))) then if (v95<=(7 + 57)) then local v196=0 -0 ;local v197;local v198;local v199;while true do if (v196==0) then local v375=297 -(36 + 261) ;while true do if (v375==1) then v196=1 -0 ;break;end if (v375==(1368 -(34 + 1334))) then v197=v94[2];v198={v92[v197](v21(v92,v197 + (3 -2) ,v87))};v375=1 + 0 ;end end end if (v196==(1284 -(1035 + 248))) then v199=21 -(20 + 1) ;for v393=v197,v94[2 + 2 ] do v199=v199 + 1 + 0 ;v92[v393]=v198[v199];end break;end end elseif (v95>(384 -(134 + 185))) then local v307=0;local v308;local v309;while true do if (v307==(1134 -(549 + 584))) then for v449=v308 + (686 -(314 + 371)) ,v87 do v15(v309,v92[v449]);end break;end if (v307==0) then v308=v94[6 -4 ];v309=v92[v308];v307=969 -(478 + 490) ;end end else v86=v94[2 + 1 ];end elseif (v95<=(1239 -(786 + 386))) then do return;end elseif (v95>68) then local v311=0 -0 ;local v312;local v313;local v314;while true do if (v311==(1380 -(1055 + 324))) then v314={};v313=v18({},{[v7("\248\104\23\178\85\160\178","\43\167\55\126\220\49\197\202")]=function(v450,v451) local v452=1340 -(1093 + 247) ;local v453;local v454;while true do if (v452==0) then v453=0 + 0 ;v454=nil;v452=1 + 0 ;end if (v452==(3 -2)) then while true do if (v453==(0 -0)) then local v537=0 -0 ;while true do if ((0 -0)==v537) then v454=v314[v451];return v454[(157 + 282) -((558 -413) + (1009 -716)) ][v454[2]];end end end end break;end end end,[v7("\44\59\201\193\9\26\10\195\193\6","\126\115\100\167\164")]=function(v455,v456,v457) local v458=0 + 0 ;local v459;local v460;while true do if (v458==(0 -0)) then v459=688 -(364 + 324) ;v460=nil;v458=2 -1 ;end if (v458==(2 -1)) then while true do if (v459==0) then v460=v314[v456];v460[1 + 0 ][v460[2]]=v457;break;end end break;end end end});v311=8 -6 ;end if (v311==(2 -0)) then for v461=2 -1 ,v94[1272 -(1249 + 19) ] do local v462=0 + 0 ;local v463;local v464;local v465;while true do if (v462==0) then v463=0 -0 ;v464=nil;v462=1087 -(686 + 400) ;end if ((1 + 0)==v462) then v465=nil;while true do if (1==v463) then while true do if (1==v464) then if (v465[230 -(73 + 156) ]==(1 + 12)) then v314[v461-(812 -(721 + 90)) ]={v92,v465[473 -(224 + 246) ]};else v314[v461-(1 -0) ]={v76,v465[(271 + 1218) -(24 + 974 + 488) ]};end v91[ #v91 + 1 + 0 ]=v314;break;end if (v464==0) then local v559=0;while true do if (v559==0) then v86=v86 + (431 -((87 -43) + 386)) ;v465=v82[v86];v559=1;end if (v559==(3 -2)) then v464=514 -(203 + 310) ;break;end end end end break;end if (0==v463) then v464=0;v465=nil;v463=1;end end break;end end end v92[v94[1995 -(1238 + 755) ]]=v41(v312,v313,v77);break;end if (v311==(0 + 0)) then v312=v83[v94[(1538 -(709 + 825)) -(1 -0) ]];v313=nil;v311=1 -0 ;end end else local v315=864 -(196 + 668) ;local v316;local v317;local v318;while true do if (v315==1) then v318=nil;while true do if (v316==(0 -0)) then local v493=0 -0 ;local v494;while true do if ((833 -(171 + 662))==v493) then v494=93 -(4 + 89) ;while true do if ((0 -0)==v494) then v317=v94[1 + 0 + 1 ];v318=v92[v317];v494=1;end if (v494==(4 -3)) then v316=1 + 0 ;break;end end break;end end end if (v316==(1487 -(35 + 1451))) then for v508=v317 + 1 ,v87 do v15(v318,v92[v508]);end break;end end break;end if (v315==0) then v316=0;v317=nil;v315=1454 -(28 + 1425) ;end end end elseif (v95<=81) then if (v95<=(2068 -(941 + 1052))) then if (v95<=72) then if (v95<=70) then v92[v94[2 + 0 ]]={};elseif (v95==(1585 -(822 + 692))) then v92[v94[2 -0 ]]=v41(v83[v94[2 + 1 ]],nil,v77);else v92[v94[2]]=v94[300 -(45 + 252) ]~=(0 + 0) ;end elseif (v95<=73) then v92[v94[2]][v94[2 + 1 ]]=v92[v94[9 -5 ]];elseif (v95>74) then local v321=v94[435 -(114 + 319) ];v92[v321](v92[v321 + (1 -0) ]);else do return;end end elseif (v95<=(99 -21)) then if (v95<=76) then v92[v94[2 + 0 ]]();elseif (v95==(113 -36)) then local v322=0 -0 ;local v323;local v324;local v325;while true do if ((1964 -(556 + 1407))==v322) then v325=v92[v323] + v324 ;v92[v323]=v325;v322=1208 -(741 + 465) ;end if (v322==(467 -(170 + 295))) then if (v324>0) then if (v325<=v92[v323 + 1 ]) then local v509=0 + 0 ;local v510;while true do if (v509==(0 + 0)) then v510=0 -0 ;while true do if ((0 + 0)==v510) then v86=v94[2 + 1 ];v92[v323 + 3 ]=v325;break;end end break;end end end elseif (v325>=v92[v323 + 1 + 0 ]) then local v511=1230 -(957 + 273) ;local v512;while true do if (v511==(0 + 0)) then v512=0;while true do if (v512==0) then v86=v94[2 + 1 ];v92[v323 + (11 -8) ]=v325;break;end end break;end end end break;end if (v322==(0 -0)) then v323=v94[2 + 0 ];v324=v92[v323 + (5 -3) ];v322=4 -3 ;end end else v92[v94[1782 -(389 + 1391) ]][v92[v94[3]]]=v94[776 -(127 + 74 + 60 + 511) ];end elseif (v95<=(179 -100)) then local v203=951 -(783 + 168) ;local v204;local v205;local v206;local v207;local v208;while true do if (v203==(3 -2)) then v206=nil;v207=nil;v203=2;end if (v203==2) then v208=nil;while true do if (v204==(2 + 0)) then for v486=v205,v87 do v208=v208 + (312 -(309 + 2)) ;v92[v486]=v206[v208];end break;end if (v204==(0 -0)) then local v466=1212 -(1090 + 122) ;while true do if (v466==0) then v205=v94[1 + 1 ];v206,v207=v85(v92[v205](v21(v92,v205 + (3 -2) ,v87)));v466=1 + 0 ;end if (v466==(1119 -(628 + 490))) then v204=1;break;end end end if (v204==1) then v87=(v207 + v205) -(1 + 0) ;v208=(2817 -1679) -(116 + (4670 -3648)) ;v204=776 -(431 + 343) ;end end break;end if (v203==(0 -0)) then v204=0;v205=nil;v203=1;end end elseif (v95==(231 -151)) then local v328=0 + 0 ;local v329;local v330;while true do if (v328==(0 + 0)) then v329=1695 -(556 + 1139) ;v330=nil;v328=1;end if (v328==(16 -(6 + 9))) then while true do if (v329==(0 + 0)) then v330=v94[2 + 0 ];v92[v330]=v92[v330]();break;end end break;end end elseif (v94[2]==v92[v94[173 -(28 + 141) ]]) then v86=v86 + (4 -(2 + 1)) ;else v86=v94[3 -0 ];end elseif (v95<=(52 + 25 + 10)) then if (v95<=84) then if (v95<=(1399 -(486 + 831))) then if  not v92[v94[2]] then v86=v86 + (2 -1) ;else v86=v94[10 -7 ];end elseif (v95==83) then v92[v94[2]]=v92[v94[1 + 2 ]] + v94[12 -8 ] ;else v92[v94[2]]= #v92[v94[10 -7 ]];end elseif (v95<=(1348 -(668 + 595))) then local v209=0 + 0 ;local v210;local v211;local v212;while true do if (v209==(0 + 0)) then v210=0 -0 ;v211=nil;v209=291 -(23 + 267) ;end if (v209==1) then v212=nil;while true do if (v210==(1944 -(1129 + 815))) then v211=387 -(371 + 16) ;v212=nil;v210=1751 -(1326 + 424) ;end if (v210==(1 -0)) then while true do if (v211==(0 -0)) then v212=v94[120 -(88 + 30) ];v92[v212](v21(v92,v212 + ((774 -(720 + 51)) -(4 -2)) ,v87));break;end end break;end end break;end end elseif (v95==86) then local v334=0;local v335;while true do if (0==v334) then v335=v94[1778 -(421 + 1355) ];v92[v335]=v92[v335](v21(v92,v335 + (1 -0) ,v94[3]));break;end end else local v336=v94[1 + 1 ];local v337=v92[v336 + (1085 -(286 + 797)) ];local v338=v92[v336] + v337 ;v92[v336]=v338;if (v337>(0 -0)) then if (v338<=v92[v336 + (1 -0) ]) then local v467=439 -(397 + 42) ;local v468;while true do if (v467==(0 + 0)) then v468=800 -(24 + 776) ;while true do if (v468==0) then v86=v94[3];v92[v336 + (4 -1) ]=v338;break;end end break;end end end elseif (v338>=v92[v336 + (786 -(222 + 563)) ]) then local v469=0 -0 ;local v470;while true do if (v469==0) then v470=0;while true do if (v470==0) then v86=v94[3 + 0 ];v92[v336 + ((1052 -(23 + 167)) -((2612 -(690 + 1108)) + 17 + 28)) ]=v338;break;end end break;end end end end elseif (v95<=(75 + 15)) then if (v95<=88) then v92[v94[850 -(40 + 808) ]]=v41(v83[v94[3]],nil,v77);elseif (v95>(219 -(22 + 108))) then v92[v94[7 -5 ]]=v92[v94[3 + 0 ]];else local v342=v94[2 + 0 ];do return v92[v342](v21(v92,v342 + 1 ,v94[3]));end end elseif (v95<=(5 + 86)) then local v214=0 + 0 ;local v215;while true do if (0==v214) then v215=v94[(572 -(47 + 524)) + 1 ];v92[v215]=v92[v215](v21(v92,v215 + ((575 + 311) -(261 + (1705 -1081))) ,v87));break;end end elseif (v95==(163 -(105 -34))) then v92[v94[1082 -((2326 -1306) + (1786 -(1165 + 561))) ]]=v77[v94[1 + 2 ]];else local v345=0 -0 ;local v346;local v347;while true do if (v345==0) then v346=0;v347=nil;v345=1 + 0 ;end if ((480 -(341 + 138))==v345) then while true do if (v346==(0 + 0)) then v347=v94[3 -1 ];v92[v347](v92[v347 + 1 ]);break;end end break;end end end v86=v86 + (327 -(89 + 237)) ;break;end end end end;end return v41(v40(),{},v29)(...);end return vv17(),...);